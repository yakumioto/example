# use command
# configtxgen -profile TwoOrgsOrdererGenesis -channelID swordartonline-channel -outputBlock ./channel-artifacts/genesis.block
# configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/master.tx -channelID master
# configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/KiritoAnchors.tx -channelID master -asOrg Kirito
# configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/AsunaAnchors.tx -channelID master -asOrg Asuna
---
Organizations:
  - &AincradOrg
    Name: Aincrad
    ID: Aincrad
    MSPDir: crypto-config/ordererOrganizations/aincrad.moe/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('Aincrad.member')"
      Writers:
        Type: Signature
        Rule: "OR('Aincrad.member')"
      Admins:
        Type: Signature
        Rule: "OR('Aincrad.admin')"

  - &KiritoOrg
    Name: Kirito
    ID: Kirito
    MSPDir: crypto-config/peerOrganizations/kirito.moe/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('Kirito.member', 'Kirito.peer', 'Kirito.client')"
      Writers:
        Type: Signature
        Rule: "OR('Kirito.member', 'Kirito.client')"
      Admins:
        Type: Signature
        Rule: "OR('Kirito.admin')"
    AnchorPeers:
      - Host: peer0.kirito.svc.cluster.local
        Port: 7051

  - &AsunaOrg
    Name: Asuna
    ID: Asuna
    MSPDir: crypto-config/peerOrganizations/asuna.moe/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('Asuna.member', 'Asuna.peer', 'Asuna.client')"
      Writers:
        Type: Signature
        Rule: "OR('Asuna.member', 'Asuna.client')"
      Admins:
        Type: Signature
        Rule: "OR('Asuna.admin')"
    AnchorPeers:
      - Host: peer0.asuna.svc.cluster.local
        Port: 7051


Capabilities:
  Channel: &ChannelCapabilities
    V1_3: true
  Orderer: &OrdererCapabilities
    V1_1: true
  Application: &ApplicationCapabilities
    V1_3: true
    V1_2: false
    V1_1: false

Application: &ApplicationDefaults
  Organizations:
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"

Orderer: &OrdererDefaults
  OrdererType: kafka
  Addresses:
    - orderer.aincrad.svc.cluster.local:7050
  BatchTimeout: 2s
  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 99MB
    PreferredMaxBytes: 512KB
  Kafka:
    Brokers:
      - kafka-0.kafka-svc.kafka.svc.cluster.local:9093
      - kafka-1.kafka-svc.kafka.svc.cluster.local:9093

  Organizations:
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    BlockValidation:
      Type: ImplicitMeta
      Rule: "ANY Writers"

Channel: &ChannelDefault
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
  Capabilities:
    <<: *ChannelCapabilities

Profiles:
  TwoOrgsOrdererGenesis:
    <<: *ChannelDefault
    Orderer:
      <<: *OrdererDefaults
      Organizations:
        - *AincradOrg
      Capabilities:
        <<: *OrdererCapabilities
    Consortiums:
      SampleConsortium:
        Organizations:
          - *KiritoOrg
          - *AsunaOrg

  TwoOrgsChannel:
    Consortium: SampleConsortium
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *KiritoOrg
        - *AsunaOrg
      Capabilities:
        <<: *ApplicationCapabilities